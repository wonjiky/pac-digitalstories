{"ast":null,"code":"var _jsxFileName = \"/Users/wonjikyang/OneDrive - OECD/SWAC/Africapolis/PAC/Interactive graph/pac-digitalstories/src/Components/Visualisation/LineGraph/LineGraph.js\";\nimport React from 'react';\nimport { ResponsiveContainer, LineChart, YAxis, XAxis, Line, Tooltip } from 'recharts';\nimport classes from './LineGraph.module.css';\n\nconst lineGraph = props => {\n  const data = props.data;\n  let lineChart = React.createElement(ResponsiveContainer, {\n    width: \"100%\",\n    height: \"100%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(LineChart, {\n    data: data.data,\n    margin: {\n      top: 10,\n      right: 20,\n      left: 20,\n      bottom: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(XAxis, {\n    strokeWidth: \"1px\",\n    stroke: 'black',\n    tick: {\n      fontSize: '11px'\n    },\n    dataKey: 'year',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }), React.createElement(YAxis, {\n    hide: true,\n    tick: {\n      fontSize: '12px'\n    },\n    type: \"number\",\n    domain: [0, 'dataMax'],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }), React.createElement(Tooltip, {\n    cursor: {\n      strokeWidth: 0\n    },\n    content: renderTooltip,\n    type: data.type,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }), React.createElement(Line, {\n    type: \"monotone\",\n    dataKey: \"value\",\n    strokeWidth: \"3px\",\n    stroke: '#a70000',\n    fill: \"#a70000\",\n    activeDot: {\n      r: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  })));\n  return React.createElement(\"div\", {\n    className: classes.LineGraph,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, lineChart);\n};\n\nexport default lineGraph;\n\nconst renderTooltip = props => {\n  if (props.active && props.payload !== null && props.payload[0] !== null) {\n    let payload = props.payload[0].payload;\n    let tooltip = null;\n\n    switch (props.type) {\n      case 'Upop':\n        return tooltip = React.createElement(\"p\", {\n          className: classes.Tooltip,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, parseFloat(payload.value).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \"), \" Inhabitants\");\n        break;\n\n      case 'Urbanlevel':\n        return tooltip = React.createElement(\"p\", {\n          className: classes.Tooltip,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, parseFloat(payload.value).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \"), \" %\");\n        break;\n\n      case 'NumAgllos':\n        return tooltip = React.createElement(\"p\", {\n          className: classes.Tooltip,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, parseFloat(payload.value).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \"), \" agglomerations\");\n        break;\n\n      case 'Mpop':\n        return tooltip = React.createElement(\"p\", {\n          className: classes.Tooltip,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, parseFloat(payload.value).toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \"), \" %\");\n        break;\n\n      case 'ADBA':\n        return tooltip = React.createElement(\"p\", {\n          className: classes.Tooltip,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, parseFloat(payload.value).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \"), \" km\");\n        break;\n\n      default:\n        return tooltip;\n    }\n  }\n};","map":{"version":3,"sources":["/Users/wonjikyang/OneDrive - OECD/SWAC/Africapolis/PAC/Interactive graph/pac-digitalstories/src/Components/Visualisation/LineGraph/LineGraph.js"],"names":["React","ResponsiveContainer","LineChart","YAxis","XAxis","Line","Tooltip","classes","lineGraph","props","data","lineChart","top","right","left","bottom","fontSize","strokeWidth","renderTooltip","type","r","LineGraph","active","payload","tooltip","parseFloat","value","toString","replace","toFixed"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { ResponsiveContainer, LineChart, YAxis, XAxis, Line, Tooltip  } from 'recharts'\nimport classes from './LineGraph.module.css';\n\nconst lineGraph = props => {\n    const { data } = props;\n    let lineChart = (\n        <ResponsiveContainer width=\"100%\" height=\"100%\" >\n            <LineChart data={data.data}\n                margin={{top: 10, right: 20, left: 20, bottom: 10}}\n                >\n                <XAxis strokeWidth=\"1px\" stroke={'black'} tick={{fontSize: '11px'}} dataKey={'year'} />\n                <YAxis hide={true} tick={{fontSize: '12px'}} type=\"number\" domain={[0, 'dataMax']} />\n                <Tooltip cursor={{ strokeWidth: 0 }} content={renderTooltip} type={data.type} />\n                <Line type=\"monotone\" dataKey=\"value\" strokeWidth=\"3px\" stroke={'#a70000'} fill=\"#a70000\" activeDot={{r: 10}}/>\n            </LineChart>\n        </ResponsiveContainer>\n    )\n\n    return (\n        <div className={classes.LineGraph}>\n            {lineChart}\n        </div>\n    );\n}\n\nexport default lineGraph;\n\nconst renderTooltip = props => {\n    if ( props.active && props.payload !== null && props.payload[0] !== null ){\n        let payload = props.payload[0].payload;\n    \n    let tooltip = null;\n    switch( props.type ) {\n        case 'Upop' : \n            return tooltip = (\n                <p className={classes.Tooltip}>\n                        {parseFloat(payload.value).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \")} Inhabitants\n                </p>\n            )\n        break;\n        case 'Urbanlevel' : \n            return tooltip = (\n                <p className={classes.Tooltip}>\n                        {parseFloat(payload.value).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \")} %\n                </p>\n            )\n        break;\n        case 'NumAgllos' : \n            return tooltip = (\n                <p className={classes.Tooltip}>\n                        {parseFloat(payload.value).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \")} agglomerations\n                </p>\n            )\n        break;\n        case 'Mpop' : \n            return tooltip = (\n                <p className={classes.Tooltip}>\n                        {parseFloat(payload.value).toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \")} %\n                </p>\n            )\n        break;\n        case 'ADBA' : \n            return tooltip = (\n                <p className={classes.Tooltip}>\n                        {parseFloat(payload.value).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \")} km\n                </p>\n            )\n        break;\n        default: \n            return tooltip;\n    }\n    \n    }\n}\n"]},"metadata":{},"sourceType":"module"}