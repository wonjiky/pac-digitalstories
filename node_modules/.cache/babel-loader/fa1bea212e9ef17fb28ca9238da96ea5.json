{"ast":null,"code":"var _jsxFileName = \"/Users/wonjiky/OneDrive - OECD/SWAC/Africapolis/PAC/Interactive graph/interactive-graph 2/src/App.js\";\nimport React from 'react';\nimport queryString from 'query-string';\nimport Mixer from './Components/Mixer/Mixer';\nimport Visualisation from './Components/Visualisation/Visualisation';\nimport LayoutContainer from './Container/Layout/LayoutContainer';\nimport Countries from './data/countries';\nimport { Route, BrowserRouter } from 'react-router-dom';\nimport _ from 'lodash';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      country: Countries\n    };\n  }\n\n  render() {\n    const country = this.state.country;\n    const routes = [{\n      ID: 1,\n      component: LayoutContainer,\n      path: \"/\",\n      exact: true\n    }, {\n      ID: 2,\n      component: LayoutContainer,\n      path: \"/fr\",\n      exact: false\n    }];\n    let keyFigureList = [{\n      \"ID\": 1,\n      \"label\": \"Upop\",\n      \"type\": \"Urban population\",\n      \"type_FR\": \"Population urbaine\"\n    }, {\n      \"ID\": 2,\n      \"label\": \"Urbanlevel\",\n      \"type\": \"Level of urbanisation\",\n      \"type_FR\": \"Niveau d'urbanisation\"\n    }, {\n      \"ID\": 3,\n      \"label\": \"NumAgllos\",\n      \"type\": \"Number of agglomerations\",\n      \"type_FR\": \"Nombre d'agglomérations\"\n    }, {\n      \"ID\": 4,\n      \"label\": \"Mpop\",\n      \"type\": \"Metropolitan population\",\n      \"type_FR\": \"Population métropolitaine\"\n    }, {\n      \"ID\": 5,\n      \"label\": \"ADBA\",\n      \"type\": \"Average distance between agglomerations\",\n      \"type_FR\": \"Distance moyenne entre les agglomérations\"\n    }];\n    return React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, routes.map(({\n      ID,\n      component: C,\n      path,\n      exact\n    }) => React.createElement(Route, {\n      key: ID,\n      path: path,\n      exact: exact,\n      render: ({\n        location,\n        history\n      }) => React.createElement(C, {\n        query: getParams(location),\n        history: history,\n        data: country,\n        keyFigureList: keyFigureList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    })));\n  }\n\n}\n\nfunction getParams(location) {\n  const queries = queryString.parse(location.search);\n  return queries;\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/wonjiky/OneDrive - OECD/SWAC/Africapolis/PAC/Interactive graph/interactive-graph 2/src/App.js"],"names":["React","queryString","Mixer","Visualisation","LayoutContainer","Countries","Route","BrowserRouter","_","App","Component","state","country","render","routes","ID","component","path","exact","keyFigureList","map","C","location","history","getParams","queries","parse","search"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,OAAOC,eAAP,MAA4B,oCAA5B;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,SAASC,KAAT,EAAgBC,aAAhB,QAAqC,kBAArC;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAO,WAAP;;AAGA,MAAMC,GAAN,SAAkBT,KAAK,CAACU,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAEjCC,KAFiC,GAEzB;AACPC,MAAAA,OAAO,EAAEP;AADF,KAFyB;AAAA;;AAMjCQ,EAAAA,MAAM,GAAG;AAAA,UAEPD,OAFO,GAGJ,KAAKD,KAHD,CAEPC,OAFO;AAKR,UAAME,MAAM,GAAG,CACd;AAAEC,MAAAA,EAAE,EAAC,CAAL;AAAQC,MAAAA,SAAS,EAAEZ,eAAnB;AAAoCa,MAAAA,IAAI,EAAE,GAA1C;AAA+CC,MAAAA,KAAK,EAAE;AAAtD,KADc,EAEd;AAAEH,MAAAA,EAAE,EAAC,CAAL;AAAQC,MAAAA,SAAS,EAAEZ,eAAnB;AAAoCa,MAAAA,IAAI,EAAE,KAA1C;AAAiDC,MAAAA,KAAK,EAAE;AAAxD,KAFc,CAAf;AAKA,QAAIC,aAAa,GAAG,CACV;AAAE,YAAM,CAAR;AAAW,eAAS,MAApB;AAA4B,cAAQ,kBAApC;AAAwD,iBAAW;AAAnE,KADU,EAEV;AAAE,YAAM,CAAR;AAAW,eAAS,YAApB;AAAkC,cAAQ,uBAA1C;AAAmE,iBAAW;AAA9E,KAFU,EAGV;AAAE,YAAM,CAAR;AAAW,eAAS,WAApB;AAAiC,cAAQ,0BAAzC;AAAqE,iBAAW;AAAhF,KAHU,EAIV;AAAE,YAAM,CAAR;AAAW,eAAS,MAApB;AAA4B,cAAQ,yBAApC;AAA+D,iBAAW;AAA1E,KAJU,EAKV;AAAE,YAAM,CAAR;AAAW,eAAS,MAApB;AAA4B,cAAQ,yCAApC;AAA+E,iBAAW;AAA1F,KALU,CAApB;AAQA,WACC,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEL,MAAM,CAACM,GAAP,CAAY,CAAC;AAACL,MAAAA,EAAD;AAAKC,MAAAA,SAAS,EAAEK,CAAhB;AAAmBJ,MAAAA,IAAnB;AAAyBC,MAAAA;AAAzB,KAAD,KACZ,oBAAC,KAAD;AACC,MAAA,GAAG,EAAEH,EADN;AAEC,MAAA,IAAI,EAAEE,IAFP;AAGC,MAAA,KAAK,EAAEC,KAHR;AAIC,MAAA,MAAM,EAAE,CAAE;AAACI,QAAAA,QAAD;AAAWC,QAAAA;AAAX,OAAF,KACP,oBAAC,CAAD;AAAG,QAAA,KAAK,EAAEC,SAAS,CAACF,QAAD,CAAnB;AAA+B,QAAA,OAAO,EAAEC,OAAxC;AAAiD,QAAA,IAAI,EAAEX,OAAvD;AAAgE,QAAA,aAAa,EAAEO,aAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADF,CADD;AAaA;;AArCgC;;AAwClC,SAASK,SAAT,CAAmBF,QAAnB,EAA6B;AAC5B,QAAMG,OAAO,GAAGxB,WAAW,CAACyB,KAAZ,CAAkBJ,QAAQ,CAACK,MAA3B,CAAhB;AACA,SAAOF,OAAP;AACA;;AAED,eAAehB,GAAf","sourcesContent":["import React from 'react';\nimport queryString from 'query-string';\nimport Mixer from './Components/Mixer/Mixer';\nimport Visualisation from './Components/Visualisation/Visualisation';\nimport LayoutContainer from './Container/Layout/LayoutContainer';\nimport Countries from './data/countries';\nimport { Route, BrowserRouter } from 'react-router-dom';\nimport _ from 'lodash';\nimport './App.css';\n\n\nclass App extends React.Component {\n\n\tstate = {\n\t\tcountry: Countries,\n\t}\n\n\trender() {\n\t\tconst { \n\t\t\tcountry,\n\t\t} = this.state;\n\n\t\tconst routes = [\n\t\t\t{ ID:1, component: LayoutContainer, path: \"/\", exact: true},\n\t\t\t{ ID:2, component: LayoutContainer, path: \"/fr\", exact: false},\n\t\t];\n\n\t\tlet keyFigureList = [\n            { \"ID\": 1, \"label\": \"Upop\", \"type\": \"Urban population\", \"type_FR\": \"Population urbaine\" },\n            { \"ID\": 2, \"label\": \"Urbanlevel\", \"type\": \"Level of urbanisation\", \"type_FR\": \"Niveau d'urbanisation\" },\n            { \"ID\": 3, \"label\": \"NumAgllos\", \"type\": \"Number of agglomerations\", \"type_FR\": \"Nombre d'agglomérations\" },\n            { \"ID\": 4, \"label\": \"Mpop\", \"type\": \"Metropolitan population\", \"type_FR\": \"Population métropolitaine\" },\n            { \"ID\": 5, \"label\": \"ADBA\", \"type\": \"Average distance between agglomerations\", \"type_FR\": \"Distance moyenne entre les agglomérations\" }\n        ];\n\n\t\treturn (\n\t\t\t<BrowserRouter>\n\t\t\t\t{routes.map( ({ID, component: C, path, exact}) => (\n\t\t\t\t\t<Route \n\t\t\t\t\t\tkey={ID}\n\t\t\t\t\t\tpath={path}\n\t\t\t\t\t\texact={exact}\n\t\t\t\t\t\trender={( {location, history}) =>\n\t\t\t\t\t\t\t<C query={getParams(location)} history={history} data={country} keyFigureList={keyFigureList} /> } \n\t\t\t\t\t/>\n\t\t\t\t) )}\n\t\t\t</BrowserRouter>\n\t\t)\n\t}\n}\n\nfunction getParams(location) {\n\tconst queries = queryString.parse(location.search);\n\treturn queries;\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}