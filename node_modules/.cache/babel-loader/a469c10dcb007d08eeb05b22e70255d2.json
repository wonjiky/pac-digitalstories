{"ast":null,"code":"var _jsxFileName = \"/Users/wonjikyang/OneDrive - OECD/SWAC/Africapolis/PAC/Interactive graph/pac-digitalstories/src/Components/CountryShape/TestShape.js\";\nimport React, { PureComponent } from 'react';\nimport { feature } from 'topojson';\nimport { easeQuadOut } from 'd3-ease';\nimport { Animate } from 'react-move';\nimport { interpolate } from 'flubber';\nimport countries from '../../data/geo_country';\nconst view = [1000, 450]; // [width, height]\n\nconst trbl = [10, 10, 10, 10]; // [top, right, bottom, left] margins\n\nclass Example extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      states: countries.data.features.map(d => {\n        return d.geometry.coordinates[0];\n      })\n    };\n\n    this.update = () => {\n      // take the first one, put it at the end\n      this.setState(({\n        states\n      }) => ({\n        states: [...states.slice(1), states[0]]\n      }));\n    };\n  }\n\n  render() {\n    console.log(this.state.states); // const { update, state: { states } } = this\n    // const interpolator = interpolate(states[0], states[1])\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Example;","map":{"version":3,"sources":["/Users/wonjikyang/OneDrive - OECD/SWAC/Africapolis/PAC/Interactive graph/pac-digitalstories/src/Components/CountryShape/TestShape.js"],"names":["React","PureComponent","feature","easeQuadOut","Animate","interpolate","countries","view","trbl","Example","state","states","data","features","map","d","geometry","coordinates","update","setState","slice","render","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SAASC,OAAT,QAAwB,UAAxB;AACA,SAASC,WAAT,QAA4B,SAA5B;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,SAASC,WAAT,QAA4B,SAA5B;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AAEA,MAAMC,IAAI,GAAG,CAAC,IAAD,EAAO,GAAP,CAAb,C,CAAyB;;AACzB,MAAMC,IAAI,GAAG,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,CAAb,C,CAA8B;;AAE9B,MAAMC,OAAN,SAAsBR,aAAtB,CAAoC;AAAA;AAAA;AAAA,SAClCS,KADkC,GAC1B;AACNC,MAAAA,MAAM,EAAEL,SAAS,CAACM,IAAV,CAAeC,QAAf,CAAwBC,GAAxB,CAA4BC,CAAC,IAAI;AACrC,eAAOA,CAAC,CAACC,QAAF,CAAWC,WAAX,CAAuB,CAAvB,CAAP;AACH,OAFO;AADF,KAD0B;;AAAA,SAOlCC,MAPkC,GAOzB,MAAM;AAAE;AACf,WAAKC,QAAL,CAAc,CAAC;AAAER,QAAAA;AAAF,OAAD,MAAiB;AAC7BA,QAAAA,MAAM,EAAE,CACN,GAAGA,MAAM,CAACS,KAAP,CAAa,CAAb,CADG,EAENT,MAAM,CAAC,CAAD,CAFA;AADqB,OAAjB,CAAd;AAMD,KAdiC;AAAA;;AAgBlCU,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAL,CAAWC,MAAvB,EADO,CAEP;AACA;;AAEA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAoCD;;AAzDiC;;AA4DpC,eAAeF,OAAf","sourcesContent":["import React, { PureComponent } from 'react'\nimport { feature } from 'topojson'\nimport { easeQuadOut } from 'd3-ease'\nimport { Animate } from 'react-move'\nimport { interpolate } from 'flubber'\nimport countries from '../../data/geo_country';\n\nconst view = [1000, 450] // [width, height]\nconst trbl = [10, 10, 10, 10] // [top, right, bottom, left] margins\n\nclass Example extends PureComponent {\n  state = {\n    states: countries.data.features.map(d => {\n        return d.geometry.coordinates[0]\n    })\n  }\n\n  update = () => { // take the first one, put it at the end\n    this.setState(({ states }) => ({\n      states: [\n        ...states.slice(1),\n        states[0],\n      ],\n    }))\n  }\n\n  render() {\n    console.log(this.state.states);\n    // const { update, state: { states } } = this\n    // const interpolator = interpolate(states[0], states[1])\n\n    return (\n      <div>\n        {/* <button onClick={update}>Update</button>\n        <svg view={view} trbl={trbl}>\n          <Animate\n            start={{\n              opacity: 0,\n              d: interpolator(1),\n            }}\n\n            enter={[\n              {\n                opacity: [0.7],\n                timing: { duration: 1000 },\n              },\n            ]}\n\n            update={{\n              d: interpolator,\n              timing: { duration: 1000, ease: easeQuadOut },\n            }}\n          >\n            {(state) => {\n              return (\n                <g transform=\"translate(100, 0) scale(0.8)\">\n                  <path\n                    fill=\"#ff69b4\"\n                    {...state}\n                  />\n                </g>\n              )\n            }}\n          </Animate>\n        </svg> */}\n      </div>\n    )\n  }\n}\n\nexport default Example"]},"metadata":{},"sourceType":"module"}