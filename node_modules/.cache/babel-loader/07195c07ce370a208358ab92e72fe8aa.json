{"ast":null,"code":"var _jsxFileName = \"/Users/wonjikyang/OneDrive - OECD/SWAC/Africapolis/PAC/Interactive graph/pac-digitalstories/src/Components/Visualisation/LineGraph/LineGraph.js\";\nimport React from 'react';\nimport { ResponsiveContainer, LineChart, YAxis, XAxis, Line, Tooltip, CartesianGrid } from 'recharts';\nimport classes from './LineGraph.module.css';\n\nconst lineGraph = props => {\n  const data = props.data,\n        query = props.query;\n  let lineChart = React.createElement(ResponsiveContainer, {\n    width: \"100%\",\n    height: \"100%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(LineChart, {\n    data: data.data,\n    margin: {\n      top: 10,\n      right: 20,\n      left: 20,\n      bottom: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(CartesianGrid, {\n    vertical: false,\n    strokeDasharray: \"3 3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }), React.createElement(XAxis, {\n    strokeWidth: \"2px\",\n    stroke: 'black',\n    tick: {\n      fontSize: '11px'\n    },\n    dataKey: 'year',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }), React.createElement(YAxis, {\n    strokeWidth: \"0px\",\n    tick: {\n      fontSize: '11px'\n    },\n    domain: domain(query),\n    type: \"number\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }), React.createElement(Tooltip, {\n    cursor: {\n      strokeWidth: 0\n    },\n    content: renderTooltip,\n    type: data.type,\n    language: query.language,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }), React.createElement(Line, {\n    type: \"monotone\",\n    dataKey: \"value\",\n    strokeWidth: \"3px\",\n    stroke: '#a70000',\n    fill: \"#a70000\",\n    activeDot: {\n      r: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  })));\n  return React.createElement(\"div\", {\n    className: classes.LineGraph,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, lineChart);\n};\n\nexport default lineGraph;\n\nconst domain = query => {\n  console.log(query);\n};\n\nconst renderTooltip = props => {\n  if (props.active && props.payload !== null && props.payload[0] !== null) {\n    let payload = props.payload[0].payload;\n    let inhab = 'inhabitants',\n        agglos = 'agglomerations';\n\n    if (props.language === 'fr') {\n      inhab = 'habitants';\n      agglos = 'agglomÃ©rations';\n    }\n\n    let tooltip = null;\n\n    switch (props.type) {\n      case 'Upop':\n        tooltip = React.createElement(\"p\", {\n          className: classes.Tooltip,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, parseFloat(payload.value).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \"), \" \", inhab);\n        break;\n\n      case 'Urbanlevel':\n        tooltip = React.createElement(\"p\", {\n          className: classes.Tooltip,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, Math.round(payload.value * 100), \" %\");\n        break;\n\n      case 'NumAgllos':\n        tooltip = React.createElement(\"p\", {\n          className: classes.Tooltip,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, parseFloat(payload.value).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \"), \" \", agglos);\n        break;\n\n      case 'Mpop':\n        tooltip = React.createElement(\"p\", {\n          className: classes.Tooltip,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, Math.round(payload.value * 100), \" %\");\n        break;\n\n      case 'ADBA':\n        tooltip = React.createElement(\"p\", {\n          className: classes.Tooltip,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, parseFloat(payload.value).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \"), \" km\");\n        break;\n\n      default:\n        tooltip = null;\n    }\n\n    return tooltip;\n  }\n};","map":{"version":3,"sources":["/Users/wonjikyang/OneDrive - OECD/SWAC/Africapolis/PAC/Interactive graph/pac-digitalstories/src/Components/Visualisation/LineGraph/LineGraph.js"],"names":["React","ResponsiveContainer","LineChart","YAxis","XAxis","Line","Tooltip","CartesianGrid","classes","lineGraph","props","data","query","lineChart","top","right","left","bottom","fontSize","domain","strokeWidth","renderTooltip","type","language","r","LineGraph","console","log","active","payload","inhab","agglos","tooltip","parseFloat","value","toString","replace","Math","round"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { ResponsiveContainer, LineChart, YAxis, XAxis, Line, Tooltip, CartesianGrid  } from 'recharts'\nimport classes from './LineGraph.module.css';\n\nconst lineGraph = props => {\n    const { data, query } = props;\n    let lineChart = (\n        <ResponsiveContainer width=\"100%\" height=\"100%\" >\n            <LineChart data={data.data}\n                margin={{top: 10, right: 20, left: 20, bottom: 10}}\n                >\n                <CartesianGrid vertical={false} strokeDasharray=\"3 3\" />\n                <XAxis strokeWidth=\"2px\" stroke={'black'} tick={{fontSize: '11px'}} dataKey={'year'} />\n                <YAxis strokeWidth=\"0px\" tick={{fontSize: '11px'}} domain={domain(query)} type='number'/>\n                <Tooltip cursor={{ strokeWidth: 0 }} content={renderTooltip} type={data.type} language={query.language} />\n                <Line type=\"monotone\" dataKey=\"value\" strokeWidth=\"3px\" stroke={'#a70000'} fill=\"#a70000\" activeDot={{r: 10}}/>\n            </LineChart>\n        </ResponsiveContainer>\n    )\n\n    return (\n        <div className={classes.LineGraph}>\n            {lineChart}\n        </div>\n    );\n}\n\nexport default lineGraph;\n\nconst domain = (query) => {\n    console.log(query);\n}\n\nconst renderTooltip = props => {\n    if ( props.active && props.payload !== null && props.payload[0] !== null ){\n        let payload = props.payload[0].payload;\n    let inhab = 'inhabitants', agglos = 'agglomerations';\n    if(props.language === 'fr') {\n        inhab = 'habitants'\n        agglos = 'agglomÃ©rations';\n    }\n\n\n    let tooltip = null;\n    switch( props.type ) {\n        case 'Upop' : \n            tooltip = (\n                <p className={classes.Tooltip}>\n                    {parseFloat(payload.value).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \")} {inhab}\n                </p>\n            )\n        break;\n        case 'Urbanlevel' : \n            tooltip = (\n                <p className={classes.Tooltip}>\n                    {Math.round(payload.value * 100)} %\n                </p>\n            )\n        break;\n        case 'NumAgllos' : \n            tooltip = (\n                <p className={classes.Tooltip}>\n                    {parseFloat(payload.value).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \")} {agglos}\n                </p>\n            )\n        break;\n        case 'Mpop' : \n            tooltip = (\n                <p className={classes.Tooltip}>\n                    {Math.round(payload.value * 100)} %\n                </p>\n            )\n        break;\n        case 'ADBA' : \n            tooltip = (\n                <p className={classes.Tooltip}>\n                    {parseFloat(payload.value).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \")} km\n                </p>\n            )\n        break;\n        default: \n            tooltip = null;\n    }\n    \n    return tooltip;\n    \n    }\n}\n"]},"metadata":{},"sourceType":"module"}