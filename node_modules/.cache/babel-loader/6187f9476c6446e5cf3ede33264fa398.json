{"ast":null,"code":"import _objectSpread from \"/Users/wonjikyang/Desktop/pac-digitalstories/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/wonjikyang/Desktop/pac-digitalstories/src/Container/Layout/Layout.js\";\nimport React from 'react';\nimport classes from './Layout.module.css';\nimport Mixer from '../../Components/Mixer/Mixer';\nimport Visualisation from '../../Components/Visualisation/Visualisation';\n\nclass Layout extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n\n    this.pushQueries = value => {\n      let oldParameters, queryType;\n      oldParameters = _objectSpread({}, this.props.query);\n      queryType = Object.keys(value)[0];\n      oldParameters[queryType] = value[queryType];\n      const updatedParams = [];\n\n      for (let i in oldParameters) {\n        updatedParams.push(encodeURIComponent(i) + \"=\" + encodeURIComponent(oldParameters[i]));\n      }\n\n      this.props.history.push({\n        pathname: this.props.history.location.pathname,\n        search: \"?\" + updatedParams.join(\"&\")\n      });\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          data = _this$props.data,\n          shape = _this$props.shape,\n          history = _this$props.history,\n          query = _this$props.query,\n          keyFigureList = _this$props.keyFigureList; //Set searchbar options\n\n    let dataLanguage = 'Country';\n    if (query.lang === 'fr') dataLanguage = 'Country_FR';\n    let countryList = data.map(c => ({\n      value: c.ISO,\n      label: c[dataLanguage]\n    }));\n\n    if (data.length === 0 || Object.entries(query).length === 0) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \" Loading ...\");\n    } else {\n      return React.createElement(\"div\", {\n        className: classes.Layout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(Mixer, {\n        shape: shape,\n        countryList: countryList,\n        query: query,\n        onKeyFigureChange: e => this.pushQueries({\n          keyfigure: keyFigureList[e.value - 1].type\n        }),\n        keyFigureList: keyFigureList,\n        language: query.lang,\n        onSearchChange: e => this.pushQueries({\n          country: e.value\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(Visualisation, {\n        query: query,\n        history: history,\n        onKeyFigureChange: e => this.pushQueries({\n          keyfigure: keyFigureList[e.value - 1].type\n        }),\n        language: query.lang,\n        data: data[query.country - 1],\n        keyFigureList: keyFigureList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n\nexport default Layout;","map":{"version":3,"sources":["/Users/wonjikyang/Desktop/pac-digitalstories/src/Container/Layout/Layout.js"],"names":["React","classes","Mixer","Visualisation","Layout","Component","state","pushQueries","value","oldParameters","queryType","props","query","Object","keys","updatedParams","i","push","encodeURIComponent","history","pathname","location","search","join","render","data","shape","keyFigureList","dataLanguage","lang","countryList","map","c","ISO","label","length","entries","e","keyfigure","type","country"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,aAAP,MAA0B,8CAA1B;;AAGA,MAAMC,MAAN,SAAqBJ,KAAK,CAACK,SAA3B,CAAqC;AAAA;AAAA;AAAA,SACjCC,KADiC,GACzB,EADyB;;AAAA,SAGjCC,WAHiC,GAGnBC,KAAK,IAAI;AAEnB,UAAIC,aAAJ,EAAmBC,SAAnB;AACAD,MAAAA,aAAa,qBAAQ,KAAKE,KAAL,CAAWC,KAAnB,CAAb;AACAF,MAAAA,SAAS,GAAGG,MAAM,CAACC,IAAP,CAAYN,KAAZ,EAAmB,CAAnB,CAAZ;AACAC,MAAAA,aAAa,CAACC,SAAD,CAAb,GAA2BF,KAAK,CAACE,SAAD,CAAhC;AACA,YAAMK,aAAa,GAAG,EAAtB;;AAEA,WAAK,IAAIC,CAAT,IAAcP,aAAd,EAA6B;AACzBM,QAAAA,aAAa,CAACE,IAAd,CACIC,kBAAkB,CAACF,CAAD,CAAlB,GAAwB,GAAxB,GAA8BE,kBAAkB,CAACT,aAAa,CAACO,CAAD,CAAd,CADpD;AAGC;;AAEL,WAAKL,KAAL,CAAWQ,OAAX,CAAmBF,IAAnB,CAAwB;AAC7BG,QAAAA,QAAQ,EAAE,KAAKT,KAAL,CAAWQ,OAAX,CAAmBE,QAAnB,CAA4BD,QADT;AAE7BE,QAAAA,MAAM,EAAE,MAAMP,aAAa,CAACQ,IAAd,CAAmB,GAAnB;AAFe,OAAxB;AAIN,KArBmC;AAAA;;AAuBjCC,EAAAA,MAAM,GAAG;AAAA,wBAMD,KAAKb,KANJ;AAAA,UAEDc,IAFC,eAEDA,IAFC;AAAA,UAEKC,KAFL,eAEKA,KAFL;AAAA,UAGDP,OAHC,eAGDA,OAHC;AAAA,UAIDP,KAJC,eAIDA,KAJC;AAAA,UAKDe,aALC,eAKDA,aALC,EAQL;;AACA,QAAIC,YAAY,GAAG,SAAnB;AACA,QAAKhB,KAAK,CAACiB,IAAN,KAAe,IAApB,EAA0BD,YAAY,GAAC,YAAb;AAC1B,QAAIE,WAAW,GAAGL,IAAI,CAACM,GAAL,CAASC,CAAC,KAAK;AAAExB,MAAAA,KAAK,EAAEwB,CAAC,CAACC,GAAX;AAAgBC,MAAAA,KAAK,EAAEF,CAAC,CAACJ,YAAD;AAAxB,KAAL,CAAV,CAAlB;;AAIA,QAAKH,IAAI,CAACU,MAAL,KAAgB,CAAhB,IACDtB,MAAM,CAACuB,OAAP,CAAexB,KAAf,EAAsBuB,MAAtB,KAAgC,CADpC,EACuC;AAC/B,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AACH,KAHL,MAGW;AACH,aACI;AAAK,QAAA,SAAS,EAAElC,OAAO,CAACG,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AACI,QAAA,KAAK,EAAEsB,KADX;AAEI,QAAA,WAAW,EAAEI,WAFjB;AAGI,QAAA,KAAK,EAAElB,KAHX;AAII,QAAA,iBAAiB,EAAEyB,CAAC,IAAI,KAAK9B,WAAL,CAAiB;AACrC+B,UAAAA,SAAS,EAAEX,aAAa,CAACU,CAAC,CAAC7B,KAAF,GAAS,CAAV,CAAb,CAA2B+B;AADD,SAAjB,CAJ5B;AAOI,QAAA,aAAa,EAAEZ,aAPnB;AAQI,QAAA,QAAQ,EAAEf,KAAK,CAACiB,IARpB;AASI,QAAA,cAAc,EAAEQ,CAAC,IAAI,KAAK9B,WAAL,CAAiB;AAAEiC,UAAAA,OAAO,EAAEH,CAAC,CAAC7B;AAAb,SAAjB,CATzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAYI,oBAAC,aAAD;AACI,QAAA,KAAK,EAAEI,KADX;AAEI,QAAA,OAAO,EAAEO,OAFb;AAGI,QAAA,iBAAiB,EAAEkB,CAAC,IAAI,KAAK9B,WAAL,CAAiB;AACrC+B,UAAAA,SAAS,EAAEX,aAAa,CAACU,CAAC,CAAC7B,KAAF,GAAS,CAAV,CAAb,CAA2B+B;AADD,SAAjB,CAH5B;AAMI,QAAA,QAAQ,EAAE3B,KAAK,CAACiB,IANpB;AAOI,QAAA,IAAI,EAAEJ,IAAI,CAACb,KAAK,CAAC4B,OAAN,GAAgB,CAAjB,CAPd;AAQI,QAAA,aAAa,EAAEb,aARnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZJ,CADJ;AAyBP;AACJ;;AApEgC;;AAwErC,eAAevB,MAAf","sourcesContent":["import React from 'react';\nimport classes from './Layout.module.css';\nimport Mixer from '../../Components/Mixer/Mixer';\nimport Visualisation from '../../Components/Visualisation/Visualisation';\n\n\nclass Layout extends React.Component {\n    state = { }\n\n    pushQueries = value => {\n\n        let oldParameters, queryType;\n        oldParameters = { ...this.props.query };\n        queryType = Object.keys(value)[0];\n        oldParameters[queryType] = value[queryType];\n        const updatedParams = [];\n\n        for (let i in oldParameters) {\n            updatedParams.push(\n                encodeURIComponent(i) + \"=\" + encodeURIComponent(oldParameters[i])\n                );\n            }\n\n        this.props.history.push({\n\t\t\tpathname: this.props.history.location.pathname,\n\t\t\tsearch: \"?\" + updatedParams.join(\"&\")\n\t\t});\n\t}\n    \n    render() {\n        const { \n            data, shape,\n            history,\n            query,\n            keyFigureList,\n        } = this.props;\n\n        //Set searchbar options\n        let dataLanguage = 'Country'\n        if ( query.lang === 'fr') dataLanguage='Country_FR';\n        let countryList = data.map(c => ({ value: c.ISO, label: c[dataLanguage] }))\n\n\n\n        if ( data.length === 0 ||\n            Object.entries(query).length ===0 ){\n                return <div> Loading ...</div>\n            } else {\n                return (\n                    <div className={classes.Layout}>\n                        <Mixer \n                            shape={shape}\n                            countryList={countryList}\n                            query={query}\n                            onKeyFigureChange={e => this.pushQueries({ \n                                keyfigure: keyFigureList[e.value -1 ].type\n                            })}\n                            keyFigureList={keyFigureList}\n                            language={query.lang}\n                            onSearchChange={e => this.pushQueries({ country: e.value })}\n                        />\n                        <Visualisation \n                            query={query}\n                            history={history}\n                            onKeyFigureChange={e => this.pushQueries({ \n                                keyfigure: keyFigureList[e.value -1 ].type\n                            })}\n                            language={query.lang}\n                            data={data[query.country - 1]}\n                            keyFigureList={keyFigureList}\n                        />\n                    </div>\n                )\n        }   \n    }\n}\n\n\nexport default Layout;"]},"metadata":{},"sourceType":"module"}