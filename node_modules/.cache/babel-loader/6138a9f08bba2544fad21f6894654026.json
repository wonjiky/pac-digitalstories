{"ast":null,"code":"var _jsxFileName = \"/Users/wonjikyang/OneDrive - OECD/SWAC/Africapolis/PAC/Interactive graph/pac-digitalstories/src/Components/CountryShape/CountryShape.js\";\nimport React from 'react';\nimport classes from './CountryShape.module.css';\nimport { easeQuadOut } from 'd3-ease';\nimport { Animate } from 'react-move';\nimport { interpolate } from 'flubber';\nimport _ from 'lodash';\n\nclass CountryShape extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.update = () => {// take the first one, put it at the end\n      // this.setState(({ states }) => ({\n      //     states: [\n      //         ...states.slice(1),\n      //         states[0],\n      //     ],\n      // }))\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          shape = _this$props.shape,\n          query = _this$props.query;\n    let shapes = [...shape][0].features;\n\n    let selectedCountry = _.chain(shapes).filter(shape => shape.properties.ID === Number(query.country)).map(shape => ({\n      ID: shape.properties.ID,\n      coordinates: shape.geometry.coordinates\n    })).value();\n\n    console.log(selectedCountry);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Animate, {\n      start: {\n        opacity: 0,\n        d: selectedCountry[0].coordinates //interpolator(1),\n\n      },\n      enter: [{\n        opacity: [0.7],\n        timing: {\n          duration: 1000\n        }\n      }],\n      update: {\n        d: selectedCountry[0].coordinates,\n        //interpolator,\n        timing: {\n          duration: 1000,\n          ease: easeQuadOut\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, state => {\n      console.log(state);\n      return React.createElement(\"svg\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"g\", {\n        transform: \"translate(100, 0) scale(0.8)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"path\", Object.assign({\n        fill: \"#ff69b4\"\n      }, state, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }))));\n    }));\n  }\n\n}\n\nexport default CountryShape;","map":{"version":3,"sources":["/Users/wonjikyang/OneDrive - OECD/SWAC/Africapolis/PAC/Interactive graph/pac-digitalstories/src/Components/CountryShape/CountryShape.js"],"names":["React","classes","easeQuadOut","Animate","interpolate","_","CountryShape","Component","update","render","props","shape","query","shapes","features","selectedCountry","chain","filter","properties","ID","Number","country","map","coordinates","geometry","value","console","log","opacity","d","timing","duration","ease","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAASC,WAAT,QAA4B,SAA5B;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,SAASC,WAAT,QAA4B,SAA5B;AACA,OAAOC,CAAP,MAAc,QAAd;;AACA,MAAMC,YAAN,SAA2BN,KAAK,CAACO,SAAjC,CAA2C;AAAA;AAAA;;AAAA,SAQvCC,MARuC,GAQ9B,MAAM,CAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACH,KAfsC;AAAA;;AAiBvCC,EAAAA,MAAM,GAAG;AAAA,wBAGA,KAAKC,KAHL;AAAA,UAEDC,KAFC,eAEDA,KAFC;AAAA,UAEMC,KAFN,eAEMA,KAFN;AAIL,QAAIC,MAAM,GAAG,CAAE,GAAGF,KAAL,EAAa,CAAb,EAAgBG,QAA7B;;AAEA,QAAIC,eAAe,GAAGV,CAAC,CAACW,KAAF,CAAQH,MAAR,EACjBI,MADiB,CACVN,KAAK,IAAIA,KAAK,CAACO,UAAN,CAAiBC,EAAjB,KAAwBC,MAAM,CAACR,KAAK,CAACS,OAAP,CAD7B,EAEjBC,GAFiB,CAEbX,KAAK,KAAK;AACXQ,MAAAA,EAAE,EAAER,KAAK,CAACO,UAAN,CAAiBC,EADV;AAEXI,MAAAA,WAAW,EAAEZ,KAAK,CAACa,QAAN,CAAeD;AAFjB,KAAL,CAFQ,EAMjBE,KANiB,EAAtB;;AAOIC,IAAAA,OAAO,CAACC,GAAR,CAAYZ,eAAZ;AACJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,OAAD;AACI,MAAA,KAAK,EAAE;AACHa,QAAAA,OAAO,EAAE,CADN;AAEHC,QAAAA,CAAC,EAAEd,eAAe,CAAC,CAAD,CAAf,CAAmBQ,WAFnB,CAE+B;;AAF/B,OADX;AAMI,MAAA,KAAK,EAAE,CACH;AACAK,QAAAA,OAAO,EAAE,CAAC,GAAD,CADT;AAEAE,QAAAA,MAAM,EAAE;AAAEC,UAAAA,QAAQ,EAAE;AAAZ;AAFR,OADG,CANX;AAaI,MAAA,MAAM,EAAE;AACJF,QAAAA,CAAC,EAAEd,eAAe,CAAC,CAAD,CAAf,CAAmBQ,WADlB;AAC+B;AACnCO,QAAAA,MAAM,EAAE;AAAEC,UAAAA,QAAQ,EAAE,IAAZ;AAAkBC,UAAAA,IAAI,EAAE9B;AAAxB;AAFJ,OAbZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAkBM+B,KAAD,IAAW;AACRP,MAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACA,aACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAG,QAAA,SAAS,EAAC,8BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACA,QAAA,IAAI,EAAC;AADL,SAEIA,KAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ,CADJ,CADA;AAUH,KA9BL,CADJ,CADJ;AAoCH;;AAnEsC;;AAsE3C,eAAe3B,YAAf","sourcesContent":["import React from 'react';\nimport classes from './CountryShape.module.css';\nimport { easeQuadOut } from 'd3-ease';\nimport { Animate } from 'react-move';\nimport { interpolate } from 'flubber';\nimport _ from 'lodash';\nclass CountryShape extends React.Component {\n    // state = {\n    //     states: feature(statesJSON, statesJSON.objects.states)\n    //       .features.map((d) => {\n    //         return d.geometry.coordinates[0]\n    //       }),\n    //   }\n    \n    update = () => { // take the first one, put it at the end\n        // this.setState(({ states }) => ({\n        //     states: [\n        //         ...states.slice(1),\n        //         states[0],\n        //     ],\n        // }))\n    }\n\n    render() {\n        const { \n            shape, query\n         } = this.props;\n        let shapes = [ ...shape ][0].features;\n        \n        let selectedCountry = _.chain(shapes)\n            .filter(shape => shape.properties.ID === Number(query.country) )\n            .map(shape => ({\n                ID: shape.properties.ID,\n                coordinates: shape.geometry.coordinates\n            }))\n            .value();\n            console.log(selectedCountry)\n        return (\n            <div>\n                <Animate\n                    start={{\n                        opacity: 0,\n                        d: selectedCountry[0].coordinates //interpolator(1),\n                    }}\n\n                    enter={[\n                        {\n                        opacity: [0.7],\n                        timing: { duration: 1000 },\n                        },\n                    ]}\n\n                    update={{\n                        d: selectedCountry[0].coordinates, //interpolator,\n                        timing: { duration: 1000, ease: easeQuadOut },\n                    }}\n                    >\n                    {(state) => {\n                        console.log(state);\n                        return (\n                        <svg>\n                            <g transform=\"translate(100, 0) scale(0.8)\">\n                                <path\n                                fill=\"#ff69b4\"\n                                {...state}\n                                />\n                            </g>\n                        </svg>\n                        )\n                    }}\n                </Animate>\n            </div>\n        )\n    }\n}\n\nexport default CountryShape;"]},"metadata":{},"sourceType":"module"}