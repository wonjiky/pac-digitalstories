{"ast":null,"code":"import React from'react';import{ResponsiveContainer,LineChart,YAxis,XAxis,Line,Tooltip}from'recharts';import classes from'./LineGraph.module.css';var lineGraph=function lineGraph(props){var data=props.data,language=props.language;var lineChart=React.createElement(ResponsiveContainer,{width:\"100%\",height:\"100%\"},React.createElement(LineChart,{data:data.data,margin:{top:10,right:20,left:20,bottom:10}},React.createElement(XAxis,{strokeWidth:\"1px\",stroke:'black',tick:{fontSize:'11px'},dataKey:'year'}),React.createElement(YAxis,{hide:true,tick:{fontSize:'12px'},type:\"number\",domain:[0,'dataMax']}),React.createElement(Tooltip,{cursor:{strokeWidth:0},content:renderTooltip,type:data.type,language:language}),React.createElement(Line,{type:\"monotone\",dataKey:\"value\",strokeWidth:\"3px\",stroke:'#a70000',fill:\"#a70000\",activeDot:{r:10}})));return React.createElement(\"div\",{className:classes.LineGraph},lineChart);};export default lineGraph;var renderTooltip=function renderTooltip(props){if(props.active&&props.payload!==null&&props.payload[0]!==null){var payload=props.payload[0].payload;var inhab='inhabitants',agglos='agglomerations';if(props.language==='fr'){inhab='habitants';agglos='agglomérations';}var tooltip=null;switch(props.type){case'Upop':tooltip=React.createElement(\"p\",{className:classes.Tooltip},parseFloat(payload.value).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g,\" \"),\" \",inhab);break;case'Urbanlevel':tooltip=React.createElement(\"p\",{className:classes.Tooltip},Math.round(payload.value*100),\" %\");break;case'NumAgllos':tooltip=React.createElement(\"p\",{className:classes.Tooltip},parseFloat(payload.value).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g,\" \"),\" \",agglos);break;case'Mpop':tooltip=React.createElement(\"p\",{className:classes.Tooltip},Math.round(payload.value*100),\" %\");break;case'ADBA':tooltip=React.createElement(\"p\",{className:classes.Tooltip},parseFloat(payload.value).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g,\" \"),\" km\");break;default:tooltip=null;}return tooltip;}};","map":{"version":3,"sources":["/Users/wonjikyang/OneDrive - OECD/SWAC/Africapolis/PAC/Interactive graph/pac-digitalstories/src/Components/Visualisation/LineGraph/LineGraph.js"],"names":["React","ResponsiveContainer","LineChart","YAxis","XAxis","Line","Tooltip","classes","lineGraph","props","data","language","lineChart","top","right","left","bottom","fontSize","strokeWidth","renderTooltip","type","r","LineGraph","active","payload","inhab","agglos","tooltip","parseFloat","value","toString","replace","Math","round"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { ResponsiveContainer, LineChart, YAxis, XAxis, Line, Tooltip  } from 'recharts'\nimport classes from './LineGraph.module.css';\n\nconst lineGraph = props => {\n    const { data, language } = props;\n    let lineChart = (\n        <ResponsiveContainer width=\"100%\" height=\"100%\" >\n            <LineChart data={data.data}\n                margin={{top: 10, right: 20, left: 20, bottom: 10}}\n                >\n                <XAxis strokeWidth=\"1px\" stroke={'black'} tick={{fontSize: '11px'}} dataKey={'year'} />\n                <YAxis hide={true} tick={{fontSize: '12px'}} type=\"number\" domain={[0, 'dataMax']} />\n                <Tooltip cursor={{ strokeWidth: 0 }} content={renderTooltip} type={data.type} language={language} />\n                <Line type=\"monotone\" dataKey=\"value\" strokeWidth=\"3px\" stroke={'#a70000'} fill=\"#a70000\" activeDot={{r: 10}}/>\n            </LineChart>\n        </ResponsiveContainer>\n    )\n\n    return (\n        <div className={classes.LineGraph}>\n            {lineChart}\n        </div>\n    );\n}\n\nexport default lineGraph;\n\nconst renderTooltip = props => {\n    if ( props.active && props.payload !== null && props.payload[0] !== null ){\n        let payload = props.payload[0].payload;\n    let inhab = 'inhabitants', agglos = 'agglomerations';\n    if(props.language === 'fr') {\n        inhab = 'habitants'\n        agglos = 'agglomérations';\n    }\n\n\n    let tooltip = null;\n    switch( props.type ) {\n        case 'Upop' : \n            tooltip = (\n                <p className={classes.Tooltip}>\n                    {parseFloat(payload.value).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \")} {inhab}\n                </p>\n            )\n        break;\n        case 'Urbanlevel' : \n            tooltip = (\n                <p className={classes.Tooltip}>\n                    {Math.round(payload.value * 100)} %\n                </p>\n            )\n        break;\n        case 'NumAgllos' : \n            tooltip = (\n                <p className={classes.Tooltip}>\n                    {parseFloat(payload.value).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \")} {agglos}\n                </p>\n            )\n        break;\n        case 'Mpop' : \n            tooltip = (\n                <p className={classes.Tooltip}>\n                    {Math.round(payload.value * 100)} %\n                </p>\n            )\n        break;\n        case 'ADBA' : \n            tooltip = (\n                <p className={classes.Tooltip}>\n                    {parseFloat(payload.value).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \")} km\n                </p>\n            )\n        break;\n        default: \n            tooltip = null;\n    }\n    \n    return tooltip;\n    \n    }\n}\n"]},"metadata":{},"sourceType":"module"}