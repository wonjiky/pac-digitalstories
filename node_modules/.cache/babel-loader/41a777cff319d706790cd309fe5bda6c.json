{"ast":null,"code":"import React from'react';import{ResponsiveContainer,LineChart,YAxis,XAxis,Line,Tooltip,CartesianGrid}from'recharts';import classes from'./LineGraph.module.css';var lineGraph=function lineGraph(props){var data=props.data,query=props.query;var toPercent=function toPercent(value){var domain;switch(data.type){case'Upop':domain=\"\".concat(value.toLocaleString(\"ru-RU\"));break;case'Urbanlevel':domain=\"\".concat(value.toFixed(0),\"%\");break;case'NumAgllos':domain=value;break;case'Mpop':domain=\"\".concat(value.toFixed(0),\"%\");;break;case'ADBA':domain=\"\".concat(value.toFixed(0),\"km\");;break;default:domain=null;}return domain;};var lineChart=React.createElement(ResponsiveContainer,{height:\"100%\"},React.createElement(LineChart,{data:data.data,margin:{top:10,right:20,left:20,bottom:10}},React.createElement(CartesianGrid,{vertical:false,strokeDasharray:\"3 3\"}),React.createElement(XAxis,{stroke:'black',interval:0,tick:React.createElement(CustomizedAxisTick,null),tickSize:10,dataKey:'year'}),React.createElement(YAxis,{tickFormatter:toPercent,dataKey:\"value\",strokeWidth:\"0px\",stroke:\"black\",tick:{fontSize:'11px'},domain:[function(dataMin){return min(dataMin,data.type);},function(dataMax){return max(dataMax,data.type);}]}),React.createElement(Tooltip,{cursor:{strokeWidth:0},content:renderTooltip,type:data.type,language:query.language}),React.createElement(Line,{type:\"monotone\",dataKey:\"value\",strokeWidth:\"3px\",stroke:'#a70000',fill:\"#a70000\",activeDot:{r:10}})));return React.createElement(\"div\",{className:classes.LineGraph},lineChart);};export default lineGraph;var CustomizedAxisTick=function CustomizedAxisTick(props){var x=props.x,y=props.y,payload=props.payload;return React.createElement(\"g\",{transform:\"translate(\".concat(x,\",\").concat(y,\")\")},React.createElement(\"text\",{dy:16,fontSize:'11px',textAnchor:\"middle\",fill:\"black\"},payload.value));};var min=function min(type){var domain;switch(type){case'Upop':domain=0;break;case'Urbanlevel':domain=0;break;case'NumAgllos':domain=0;break;case'Mpop':domain=0;break;case'ADBA':domain=0;break;default:domain=null;}return domain;};var max=function max(value,type){var domain;switch(type){case'Upop':domain=Math.round((value+10000)/10000)*10000;break;case'Urbanlevel':domain=100;break;case'NumAgllos':domain=value;break;case'Mpop':domain=100;break;case'ADBA':domain=Math.round((value+50)/100)*100;break;default:domain=null;}return domain;};var renderTooltip=function renderTooltip(props){if(props.active&&props.payload!==null&&props.payload[0]!==null){var payload=props.payload[0].payload;var inhab='inhabitants',agglos='agglomerations';if(props.language==='fr'){inhab='habitants';agglos='agglomÃ©rations';}var tooltip=null;switch(props.type){case'Upop':tooltip=React.createElement(\"p\",{className:classes.Tooltip},parseFloat(payload.value).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g,\" \"),\" \",inhab);break;case'Urbanlevel':tooltip=React.createElement(\"p\",{className:classes.Tooltip},Math.round(payload.value),\" %\");break;case'NumAgllos':tooltip=React.createElement(\"p\",{className:classes.Tooltip},parseFloat(payload.value).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g,\" \"),\" \",agglos);break;case'Mpop':tooltip=React.createElement(\"p\",{className:classes.Tooltip},Math.round(payload.value),\" %\");break;case'ADBA':tooltip=React.createElement(\"p\",{className:classes.Tooltip},parseFloat(payload.value).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g,\" \"),\" km\");break;default:tooltip=null;}return tooltip;}};","map":{"version":3,"sources":["/Users/wonjiky/Desktop/pac-digitalstories/src/Components/Visualisation/LineGraph/LineGraph.js"],"names":["React","ResponsiveContainer","LineChart","YAxis","XAxis","Line","Tooltip","CartesianGrid","classes","lineGraph","props","data","query","toPercent","value","domain","type","toLocaleString","toFixed","lineChart","top","right","left","bottom","fontSize","dataMin","min","dataMax","max","strokeWidth","renderTooltip","language","r","LineGraph","CustomizedAxisTick","x","y","payload","Math","round","active","inhab","agglos","tooltip","parseFloat","toString","replace"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { ResponsiveContainer, LineChart, YAxis, XAxis, Line, Tooltip, CartesianGrid  } from 'recharts'\nimport classes from './LineGraph.module.css';\n\nconst lineGraph = props => {\n    const { data, query } = props;\n\n    let toPercent = value => {\n        let domain;\n        switch( data.type ) {\n            case 'Upop' : \n                domain = `${value.toLocaleString(\"ru-RU\")}`;\n            break;\n            case 'Urbanlevel' : \n                domain = `${(value).toFixed(0)}%`;\n            break;\n            case 'NumAgllos' : \n                domain = value;\n            break;\n            case 'Mpop' : \n                domain = `${(value).toFixed(0)}%`;;\n            break;\n            case 'ADBA' : \n                domain = `${(value).toFixed(0)}km`;;\n            break;\n            default: \n            domain = null;\n        }\n        return domain;\n    }\n\n    let lineChart = (\n        <ResponsiveContainer height=\"100%\" >\n            <LineChart data={data.data} margin={{top: 10, right: 20, left: 20, bottom: 10}}\n                >\n                <CartesianGrid vertical={false} strokeDasharray=\"3 3\" />\n                <XAxis stroke={'black'} interval={0} tick={<CustomizedAxisTick />} tickSize={10} dataKey={'year'} />\n                <YAxis tickFormatter={toPercent} dataKey='value' strokeWidth=\"0px\" stroke='black' tick={{fontSize: '11px'}} \n                    domain ={ [ (dataMin) => min(dataMin, data.type), (dataMax) => max(dataMax, data.type) ] }/>\n                {/* domain={domain(data.type, 'dataMin', 'dataMax')} /> */}\n                <Tooltip cursor={{ strokeWidth: 0 }} content={renderTooltip} type={data.type} language={query.language} />\n                <Line type=\"monotone\" dataKey=\"value\" strokeWidth=\"3px\" stroke={'#a70000'} fill=\"#a70000\" activeDot={{r: 10}}/>\n            </LineChart>\n        </ResponsiveContainer>\n    )\n\n    return (\n        <div className={classes.LineGraph}>\n            {lineChart}\n        </div>\n    );\n}\n\nexport default lineGraph;\n\nconst CustomizedAxisTick = props => {\n    const { x, y, payload } = props\n  \n    return (\n      <g transform={`translate(${x},${y})`}>\n        <text dy={16} fontSize={'11px'} textAnchor='middle' fill='black'>{payload.value}</text>\n      </g>\n    )\n}\n\nconst min = (type) => {\n    let domain;\n    switch( type ) {\n        case 'Upop' : \n            domain = 0;\n        break;\n        case 'Urbanlevel' : \n            domain = 0;\n        break;\n        case 'NumAgllos' : \n            domain = 0;\n        break;\n        case 'Mpop' : \n            domain = 0;\n        break;\n        case 'ADBA' : \n            domain = 0;\n        break;\n        default: \n        domain = null;\n    }\n    return domain;\n}\n\nconst max = (value, type) => {\n    let domain;\n    switch( type ) {\n        case 'Upop' : \n            domain = Math.round( (value + 10000) /10000)*10000;\n        break;\n        case 'Urbanlevel' : \n            domain = 100;\n        break;\n        case 'NumAgllos' : \n            domain = value;\n        break;\n        case 'Mpop' : \n            domain = 100;\n        break;\n        case 'ADBA' : \n            domain = Math.round( (value + 50) / 100) * 100;\n        break;\n        default: \n        domain = null;\n    }\n    return domain;\n}\n\nconst renderTooltip = props => {\n    if ( props.active && props.payload !== null && props.payload[0] !== null ){\n        let payload = props.payload[0].payload;\n    let inhab = 'inhabitants', agglos = 'agglomerations';\n    if(props.language === 'fr') {\n        inhab = 'habitants'\n        agglos = 'agglomÃ©rations';\n    }\n\n\n    let tooltip = null;\n    switch( props.type ) {\n        case 'Upop' : \n            tooltip = (\n                <p className={classes.Tooltip}>\n                    {parseFloat(payload.value).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \")} {inhab}\n                </p>\n            )\n        break;\n        case 'Urbanlevel' : \n            tooltip = (\n                <p className={classes.Tooltip}>\n                    {Math.round(payload.value)} %\n                </p>\n            )\n        break;\n        case 'NumAgllos' : \n            tooltip = (\n                <p className={classes.Tooltip}>\n                    {parseFloat(payload.value).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \")} {agglos}\n                </p>\n            )\n        break;\n        case 'Mpop' : \n            tooltip = (\n                <p className={classes.Tooltip}>\n                    {Math.round(payload.value)} %\n                </p>\n            )\n        break;\n        case 'ADBA' : \n            tooltip = (\n                <p className={classes.Tooltip}>\n                    {parseFloat(payload.value).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \")} km\n                </p>\n            )\n        break;\n        default: \n            tooltip = null;\n    }\n    \n    return tooltip;\n    \n    }\n}\n"]},"metadata":{},"sourceType":"module"}