{"ast":null,"code":"var _jsxFileName = \"/Users/wonjikyang/OneDrive - OECD/SWAC/Africapolis/PAC/Interactive graph/pac-digitalstories/src/Components/CountryShape/TestShape.js\";\nimport React, { PureComponent } from 'react';\nimport { feature } from 'topojson';\nimport { easeQuadOut } from 'd3-ease';\nimport { Animate } from 'react-move';\nimport { interpolate } from 'flubber';\nimport countries from '../../data/geo_country';\nconst view = [500, 500]; // [width, height]\n\nconst trbl = [10, 10, 10, 10]; // [top, right, bottom, left] margins\n\nclass Example extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      country: countries.data.features.map(d => {\n        return d.geometry.coordinates[0];\n      })\n    };\n\n    this.update = () => {\n      // take the first one, put it at the end\n      this.setState(({\n        country\n      }) => ({\n        states: [...country.slice(1), country[0]]\n      }));\n    };\n  }\n\n  render() {\n    //   console.log(this.props);\n    const update = this.update,\n          _this$state = this.state,\n          states = _this$state.states,\n          country = _this$state.country;\n    const interpolator = interpolate(country[0][0], country[1][0]);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: update,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Update\"), React.createElement(\"svg\", {\n      viewBox: \"0 0 100 100\",\n      trbl: trbl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Animate, {\n      start: {\n        opacity: 0,\n        d: interpolator(1)\n      },\n      enter: [{\n        opacity: [0.7],\n        timing: {\n          duration: 1000\n        }\n      }],\n      update: {\n        d: interpolator,\n        timing: {\n          duration: 1000,\n          ease: easeQuadOut\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, state => {\n      return React.createElement(\"g\", {\n        transform: \"translate(100, 0) scale(0.8)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"path\", Object.assign({\n        fill: \"#ff69b4\"\n      }, state, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      })));\n    })));\n  }\n\n}\n\nexport default Example;","map":{"version":3,"sources":["/Users/wonjikyang/OneDrive - OECD/SWAC/Africapolis/PAC/Interactive graph/pac-digitalstories/src/Components/CountryShape/TestShape.js"],"names":["React","PureComponent","feature","easeQuadOut","Animate","interpolate","countries","view","trbl","Example","state","country","data","features","map","d","geometry","coordinates","update","setState","states","slice","render","interpolator","opacity","timing","duration","ease"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SAASC,OAAT,QAAwB,UAAxB;AACA,SAASC,WAAT,QAA4B,SAA5B;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,SAASC,WAAT,QAA4B,SAA5B;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AAEA,MAAMC,IAAI,GAAG,CAAC,GAAD,EAAM,GAAN,CAAb,C,CAAwB;;AACxB,MAAMC,IAAI,GAAG,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,CAAb,C,CAA8B;;AAE9B,MAAMC,OAAN,SAAsBR,aAAtB,CAAoC;AAAA;AAAA;AAAA,SAClCS,KADkC,GAC1B;AACNC,MAAAA,OAAO,EAAEL,SAAS,CAACM,IAAV,CAAeC,QAAf,CAAwBC,GAAxB,CAA4BC,CAAC,IAAI;AACtC,eAAOA,CAAC,CAACC,QAAF,CAAWC,WAAX,CAAuB,CAAvB,CAAP;AACH,OAFQ;AADH,KAD0B;;AAAA,SAOlCC,MAPkC,GAOzB,MAAM;AAAE;AACf,WAAKC,QAAL,CAAc,CAAC;AAAER,QAAAA;AAAF,OAAD,MAAkB;AAC9BS,QAAAA,MAAM,EAAE,CACN,GAAGT,OAAO,CAACU,KAAR,CAAc,CAAd,CADG,EAENV,OAAO,CAAC,CAAD,CAFD;AADsB,OAAlB,CAAd;AAMD,KAdiC;AAAA;;AAgBlCW,EAAAA,MAAM,GAAG;AACP;AADO,UAECJ,MAFD,GAEwC,IAFxC,CAECA,MAFD;AAAA,wBAEwC,IAFxC,CAESR,KAFT;AAAA,UAEkBU,MAFlB,eAEkBA,MAFlB;AAAA,UAE0BT,OAF1B,eAE0BA,OAF1B;AAGP,UAAMY,YAAY,GAAGlB,WAAW,CAACM,OAAO,CAAC,CAAD,CAAP,CAAW,CAAX,CAAD,EAAgBA,OAAO,CAAC,CAAD,CAAP,CAAW,CAAX,CAAhB,CAAhC;AAEA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,OAAO,EAAEO,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAM,MAAA,OAAO,EAAC,aAAd;AAA4B,MAAA,IAAI,EAAEV,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AACE,MAAA,KAAK,EAAE;AACLgB,QAAAA,OAAO,EAAE,CADJ;AAELT,QAAAA,CAAC,EAAEQ,YAAY,CAAC,CAAD;AAFV,OADT;AAME,MAAA,KAAK,EAAE,CACL;AACEC,QAAAA,OAAO,EAAE,CAAC,GAAD,CADX;AAEEC,QAAAA,MAAM,EAAE;AAAEC,UAAAA,QAAQ,EAAE;AAAZ;AAFV,OADK,CANT;AAaE,MAAA,MAAM,EAAE;AACNX,QAAAA,CAAC,EAAEQ,YADG;AAENE,QAAAA,MAAM,EAAE;AAAEC,UAAAA,QAAQ,EAAE,IAAZ;AAAkBC,UAAAA,IAAI,EAAExB;AAAxB;AAFF,OAbV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAkBIO,KAAD,IAAW;AACV,aACE;AAAG,QAAA,SAAS,EAAC,8BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,IAAI,EAAC;AADP,SAEMA,KAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,CADF;AAQD,KA3BH,CADF,CAFF,CADF;AAoCD;;AAzDiC;;AA4DpC,eAAeD,OAAf","sourcesContent":["import React, { PureComponent } from 'react'\nimport { feature } from 'topojson'\nimport { easeQuadOut } from 'd3-ease'\nimport { Animate } from 'react-move'\nimport { interpolate } from 'flubber'\nimport countries from '../../data/geo_country';\n\nconst view = [500, 500] // [width, height]\nconst trbl = [10, 10, 10, 10] // [top, right, bottom, left] margins\n\nclass Example extends PureComponent {\n  state = {\n    country: countries.data.features.map(d => {\n        return d.geometry.coordinates[0]\n    }),\n  }\n\n  update = () => { // take the first one, put it at the end\n    this.setState(({ country }) => ({\n      states: [\n        ...country.slice(1),\n        country[0],\n      ],\n    }))\n  }\n\n  render() {\n    //   console.log(this.props);\n    const { update, state: { states, country } } = this;\n    const interpolator = interpolate(country[0][0], country[1][0]);\n\n    return (\n      <div>\n        <button onClick={update}>Update</button>\n        <svg  viewBox='0 0 100 100' trbl={trbl}>\n          <Animate\n            start={{\n              opacity: 0,\n              d: interpolator(1),\n            }}\n\n            enter={[\n              {\n                opacity: [0.7],\n                timing: { duration: 1000 },\n              },\n            ]}\n\n            update={{\n              d: interpolator,\n              timing: { duration: 1000, ease: easeQuadOut },\n            }}\n          >\n            {(state) => {\n              return (\n                <g transform=\"translate(100, 0) scale(0.8)\">\n                  <path\n                    fill=\"#ff69b4\"\n                    {...state}\n                  />\n                </g>\n              )\n            }}\n          </Animate>\n        </svg>\n      </div>\n    )\n  }\n}\n\nexport default Example"]},"metadata":{},"sourceType":"module"}