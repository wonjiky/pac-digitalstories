{"version":3,"sources":["Components/KeyFigures/KeyFigures.module.css","Components/Visualisation/Visualisation.module.css","Container/Layout/Layout.module.css","Components/Visualisation/LineGraph/LineGraph.module.css","Components/SearchBar/SearchBar.js","Components/KeyFigures/KeyFigures.js","Components/SearchBar/SmallMediumSearchBar.js","Components/Mixer/Mixer.js","Components/Visualisation/LineGraph/LineGraph.js","Components/Visualisation/Visualisation.js","Container/Layout/Layout.js","Container/Layout/LayoutContainer.js","App.js","serviceWorker.js","index.js","Components/SearchBar/SearchBar.module.css","Components/Mixer/Mixer.module.css"],"names":["module","exports","styles","menu","base","state","backgroundColor","borderRadius","boxShadow","height","option","isDisabled","isSelected","isFocused","menuList","maxHeight","dropdownIndicator","control","isHidden","borderStyle","borderColor","borderWidth","color","singleValue","fontSize","fontWeight","input","searchBar","props","options","query","flattenedOption","className","classes","SearchBar","onChange","onSearchChange","menuIsOpen","isSearchable","value","filter","d","Number","country","components","Control","data","onKeyFigureChange","lang","language","checkValue","type","keyfigure","map","ID","label","style","styles__sm","KeyFiguresWrapper","KeyFigures","isRtl","IndicatorSeparator","indicatorSeparator","borderBottom","textAlign","SearchBar__Sm","mixer","countryList","keyFigureList","Mixer","Large","Sm_Md","SmallMediumSearchBar","lineGraph","lineChart","margin","top","right","left","bottom","vertical","strokeDasharray","stroke","interval","tick","tickSize","dataKey","tickFormatter","domain","toLocaleString","toFixed","strokeWidth","dataMin","min","dataMax","max","cursor","content","renderTooltip","fill","activeDot","r","LineGraph","CustomizedAxisTick","x","y","payload","transform","dy","textAnchor","Math","round","active","inhab","agglos","tooltip","Tooltip","parseFloat","toString","replace","visualisation","history","location","pathname","dataType","filterData","res","i","push","year","yAxisKey","cleanData","line","KeyFigure__Md_Lg","Visualisation","Layout","pushQueries","oldParameters","queryType","Object","keys","updatedParams","encodeURIComponent","search","join","this","shape","dataLanguage","sort","a","b","ISO","_","chain","c","chunk","sortAlphabetically","localeCompare","length","entries","e","React","Component","LayoutContainer","newParameters","newQueries","getParams","queryString","parse","App","Countries","Shapefile","routes","component","path","exact","basename","C","key","render","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d0adb1ad.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"KeyFiguresWrapper\":\"KeyFigures_KeyFiguresWrapper__3jpQR\",\"KeyFigures\":\"KeyFigures_KeyFigures__3DV5s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Visualisation\":\"Visualisation_Visualisation__2E_VQ\",\"KeyFigure__Md_Lg\":\"Visualisation_KeyFigure__Md_Lg__11J7u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__3XWY9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LineGraph\":\"LineGraph_LineGraph__T-tQr\"};","import React from 'react';\nimport classes from './SearchBar.module.css';\nimport Select from 'react-select';\n\nconst searchBar = props => {\n    const {\n        options,\n        query,\n    } = props;\n    let flattenedOption = [ ...options[0].options, ...options[1].options];\n    return (\n        <div className={classes.SearchBar}>\n            <Select \n                styles={styles}\n                onChange={props.onSearchChange}\n                menuIsOpen={true}\n                options={options}\n                isSearchable={false}\n                value={flattenedOption.filter(d => d.value === Number(query.country))}\n                components={{\n                  Control: () => null\n                }}\n            />\n        </div>\n    )\n}\n\nconst styles = {\n    // indicatorSeparator: (base, state) => {\n\n    // },\n    menu: (base, state) => {\n        return {\n            ...base,\n            backgroundColor: \"#fef7e7\",\n            borderRadius: 0,\n            boxShadow: 0,\n            height: '572px',\n            // opacity: \".9\"\n        }\n    },\n    option: (base, { isDisabled, isFocused, isSelected }) => {\n      return {\n        ...base,\n        backgroundColor: isDisabled ? \"#a70000\" : isSelected ? \"#a70000\" : null,\n        // color: isDisabled\n        //   ? '#ccc'\n        //   : isSelected\n        //   ? chroma.contrast(color, 'white') > 2\n        //     ? 'white'\n        //     : 'black'\n        //   : data.color,\n        ':active': {\n          // ...styles[':active'],\n          // backgroundColor: isSelected ? \"#a70000\" : \"#a70000\",\n          // opacity: isSelected ? \".4\" : \".7\",\n          // color: isSelected ? \"#fef7e7\" : \".7\",\n        },\n      }\n    },\n    menuList: (base, state) => {\n        return {\n            ...base,\n            maxHeight: 'none',\n            height: '100%',\n        }\n    },\n    dropdownIndicator: (base, state) => {\n      return { ...base,\n        \n      };\n    },\n    control: (base, state) => {\n      return { ...base,\n        isHidden: true, \n        boxShadow: 'none',\n        backgroundColor: 'none',\n        borderStyle: 'solid', \n        borderColor: '#449999',\n        borderWidth: '0px',\n        color: 'none', \n        \"&:hover\": { \n        }\n      };\n    },\n    singleValue: (base, state) => {\n      return {\n        ...base,\n        fontSize:'2rem',\n        fontWeight:'600',\n        color: '#212529',\n      }\n    },\n    input: (base, state) => {\n      return {\n        ...base,\n        fontSize:'2rem',\n        fontWeight:'900',\n        color: '#212529'\n      }\n    }\n};\n\nexport default searchBar","import React from 'react';\nimport classes from './KeyFigures.module.css';\nimport Select from 'react-select';\n\nexport default props => {\n    \n    const { data, query, onKeyFigureChange } = props;\n    let lang = 'type';\n    if ( props.language === 'fr') lang = 'type_FR';\n    \n    let checkValue = data.filter(d => d.type === query.keyfigure)\n    let options = data.map(d => ({\n        value: d.ID, label: d[lang]\n    }))\n    let style = props.type === 'small' ? styles__sm : styles;\n\n    return (\n        <div className={classes.KeyFiguresWrapper}>\n            <Select \n                options={options}\n                styles={style}\n                className={classes.KeyFigures}\n                isRtl={false}\n                isSearchable={false}\n                value={options[checkValue[0].ID - 1]}\n                onChange={onKeyFigureChange}\n                components={\n                    props.type ==='small' ? null : \n                    {\n                        // DropdownIndicator: null,\n                        IndicatorSeparator: null,\n                    }\n                }\n            />\n        </div>\n        // <form className={classes.KeyFigures}>\n        //     {data.map(d => (\n        //         <React.Fragment key={d.ID}>\n        //             <input \n        //                 key={d.ID}\n        //                 type=\"radio\" \n        //                 value={d.ID} \n        //                 checked={checkValue[0].ID === d.ID} \n        //                 onChange={onKeyFigureChange}\n        //             />\n        //             <label>\n        //                 {d[lang]}   \n        //             </label> \n        //         </React.Fragment>\n        //     ))}\n        // </form> \n    );\n};\n\nconst styles__sm = {\n  indicatorSeparator: (base, state) => {\n\n  },\n  menu: (base, state) => {\n      return {\n          ...base,\n          backgroundColor: \"white\",\n          borderRadius: 0,\n          boxShadow: 0,\n      }\n  },\n  option: (base, { isDisabled, isFocused, isSelected }) => {\n    return {\n      ...base,\n      backgroundColor: isDisabled ? \"#a70000\" : isSelected ? \"#a70000\" : null,\n      ':active': {\n      },\n    }\n  },\n  menuList: (base, state) => {\n      return {\n          ...base,\n      }\n  },\n  control: (base, state) => {\n    return { ...base,\n      isHidden: true, \n      boxShadow: 'none',\n      backgroundColor: 'none',\n      borderStyle: 'solid', \n      borderBottom: '2px solid black',\n      borderRadius: '0px',\n      borderWidth: '0px',\n      color: 'none', \n      \"&:hover\": { \n      }\n    };\n  },\n  singleValue: (base, state) => {\n    return {\n      ...base,\n      // color: '#212529',\n      // textAlign: \"right\",\n    }\n  },\n  input: (base, state) => {\n    return {\n      ...base,\n      // color: '#212529'\n    }\n  }\n};\n\nconst styles = {\n    // indicatorSeparator: (base, state) => {\n\n    // },\n    menu: (base, state) => {\n        return {\n            ...base,\n            backgroundColor: \"white\",\n            borderRadius: 0,\n            boxShadow: 0,\n        }\n    },\n    option: (base, { isDisabled, isFocused, isSelected }) => {\n      return {\n        ...base,\n        backgroundColor: isDisabled ? \"#a70000\" : isSelected ? \"#a70000\" : null,\n        ':active': {\n        },\n      }\n    },\n    menuList: (base, state) => {\n        return {\n            ...base,\n        }\n    },\n    control: (base, state) => {\n      return { ...base,\n        isHidden: true, \n        boxShadow: 'none',\n        backgroundColor: 'none',\n        borderStyle: 'solid', \n        borderColor: '#449999',\n        borderWidth: '0px',\n        color: 'none', \n        \"&:hover\": { \n        }\n      };\n    },\n    singleValue: (base, state) => {\n      return {\n        ...base,\n        color: '#212529',\n        textAlign: \"right\",\n      }\n    },\n    input: (base, state) => {\n      return {\n        ...base,\n        color: '#212529'\n      }\n    }\n};","import React from 'react';\nimport classes from './SearchBar.module.css';\nimport Select from 'react-select';\n\nconst searchBar = props => {\n\n    const {\n        options,\n        query,\n    } = props;\n\n    return (\n        <div className={classes.SearchBar__Sm}>\n            <Select \n                styles={styles}\n                onChange={props.onSearchChange}\n                options={options}\n                // isSearchable={false}\n                value={options[query.country-1]}\n            />\n        </div>\n    )\n}\n\nconst styles = {\n    indicatorSeparator: (base, state) => {\n\n    },\n    menu: (base, state) => {\n        return {\n            ...base,\n            // backgroundColor: \"#fef7e7\",\n            borderRadius: 0,\n            boxShadow: 0,\n            // opacity: \".9\"\n        }\n    },\n    option: (base, { isDisabled, isFocused, isSelected }) => {\n      return {\n        ...base,\n        backgroundColor: isDisabled ? \"#a70000\" : isSelected ? \"#a70000\" : null,\n        // color: isDisabled\n        //   ? '#ccc'\n        //   : isSelected\n        //   ? chroma.contrast(color, 'white') > 2\n        //     ? 'white'\n        //     : 'black'\n        //   : data.color,\n        ':active': {\n          // ...styles[':active'],\n          // backgroundColor: isSelected ? \"#a70000\" : \"#a70000\",\n          // opacity: isSelected ? \".4\" : \".7\",\n          // color: isSelected ? \"#fef7e7\" : \".7\",\n        },\n      }\n    },\n    menuList: (base, state) => {\n        return {\n            ...base,\n        }\n    },\n    dropdownIndicator: (base, state) => {\n      return { ...base,\n        \n      };\n    },\n    control: (base, state) => {\n      return { ...base,\n        isHidden: true, \n        boxShadow: 'none',\n        backgroundColor: 'none',\n        borderStyle: 'solid', \n        borderBottom: '2px solid black',\n        borderRadius: '0px',\n        borderWidth: '0px',\n        color: 'none', \n        \"&:hover\": { \n        }\n      };\n    },\n    singleValue: (base, state) => {\n      return {\n        ...base,\n        fontWeight:'600',\n        color: '#a70000',\n      }\n    },\n    input: (base, state) => {\n      return {\n        ...base,\n        fontWeight:'600',\n        // color: '#212529'\n      }\n    }\n};\n\nexport default searchBar","import React from 'react';\nimport SearchBar from '../SearchBar/SearchBar';\nimport KeyFigures from '../KeyFigures/KeyFigures';\nimport SmallMediumSearchBar from '../SearchBar/SmallMediumSearchBar';\nimport classes from './Mixer.module.css';\n\n\nconst mixer = props => {\n\n    const { \n        countryList,\n        query, language, keyFigureList\n    } = props;\n\n    return (\n        <div className={classes.Mixer}>\n            <div className={classes.Large}>\n                <SearchBar \n                    options={countryList}\n                    onSearchChange={props.onSearchChange}\n                    query={query}\n                    menuIsOpen={true}\n                    />\n            </div>\n            <div className={classes.Sm_Md}>\n                <SmallMediumSearchBar \n                    options={countryList}\n                    onSearchChange={props.onSearchChange}\n                    query={query}\n                    menuIsOpen={false}\n                    />\n                <KeyFigures \n                    language={language}\n                    type={'small'}\n                    query={query}\n                    data={keyFigureList}             \n                    onKeyFigureChange={props.onKeyFigureChange}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default mixer;\n","import React from 'react';\nimport { ResponsiveContainer, LineChart, YAxis, XAxis, Line, Tooltip, CartesianGrid  } from 'recharts'\nimport classes from './LineGraph.module.css';\n\nconst lineGraph = props => {\n    const { data, query } = props;\n    let toPercent = value => {\n        let domain;\n        switch( data.type ) {\n            case 'Upop' : \n                domain = `${value.toLocaleString(\"ru-RU\")}`;\n            break;\n            case 'Urbanlevel' : \n                domain = `${(value).toFixed(0)}%`;\n            break;\n            case 'NumAgllos' : \n                domain = value;\n            break;\n            case 'Mpop' : \n                domain = `${(value).toFixed(0)}%`;;\n            break;\n            case 'ADBA' : \n                domain = `${(value).toFixed(0)}km`;;\n            break;\n            default: \n            domain = null;\n        }\n        return domain;\n    }\n    let lineChart = (\n        <ResponsiveContainer height=\"100%\" >\n            <LineChart data={data.data} margin={{top: 10, right: 20, left: 20, bottom: 10}}\n                >\n                <CartesianGrid vertical={false} strokeDasharray=\"3 3\" />\n                <XAxis stroke={'black'} interval={0} tick={<CustomizedAxisTick />} tickSize={10} dataKey={'year'} />\n                <YAxis tickFormatter={toPercent} dataKey='value' strokeWidth=\"0px\" stroke='black' tick={{fontSize: '11px'}} \n                    domain ={ [ (dataMin) => min(dataMin, data.type), (dataMax) => max(dataMax, data.type) ] }/>\n                {/* domain={domain(data.type, 'dataMin', 'dataMax')} /> */}\n                <Tooltip cursor={{ strokeWidth: 0 }} content={renderTooltip} type={data.type} language={query.lang} />\n                <Line type=\"monotone\" dataKey=\"value\" strokeWidth=\"3px\" stroke={'#a70000'} fill=\"#a70000\" activeDot={{r: 10}}/>\n            </LineChart>\n        </ResponsiveContainer>\n    )\n\n    return (\n        <div className={classes.LineGraph}>\n            {lineChart}\n        </div>\n    );\n}\n\nexport default lineGraph;\n\nconst CustomizedAxisTick = props => {\n    const { x, y, payload } = props\n  \n    return (\n      <g transform={`translate(${x},${y})`}>\n        <text dy={16} fontSize={'11px'} textAnchor='middle' fill='black'>{payload.value}</text>\n      </g>\n    )\n}\n\nconst min = (type) => {\n    let domain;\n    switch( type ) {\n        case 'Upop' : \n            domain = 0;\n        break;\n        case 'Urbanlevel' : \n            domain = 0;\n        break;\n        case 'NumAgllos' : \n            domain = 0;\n        break;\n        case 'Mpop' : \n            domain = 0;\n        break;\n        case 'ADBA' : \n            domain = 0;\n        break;\n        default: \n        domain = null;\n    }\n    return domain;\n}\n\nconst max = (value, type) => {\n    let domain;\n    switch( type ) {\n        case 'Upop' : \n            domain = Math.round( (value + 10000) /10000)*10000;\n        break;\n        case 'Urbanlevel' : \n            domain = 100;\n        break;\n        case 'NumAgllos' : \n            domain = value;\n        break;\n        case 'Mpop' : \n            domain = 100;\n        break;\n        case 'ADBA' : \n            domain = Math.round( (value + 50) / 100) * 100;\n        break;\n        default: \n        domain = null;\n    }\n    return domain;\n}\n\nconst renderTooltip = props => {\n    if ( props.active && props.payload !== null && props.payload[0] !== null ){\n        let payload = props.payload[0].payload;\n    let inhab = 'inhabitants', agglos = 'agglomerations';\n    if(props.language === 'fr') {\n        inhab = 'habitants'\n        agglos = 'agglomérations';\n    }\n\n\n    let tooltip = null;\n    switch( props.type ) {\n        case 'Upop' : \n            tooltip = (\n                <p className={classes.Tooltip}>\n                    {parseFloat(payload.value).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \")} {inhab}\n                </p>\n            )\n        break;\n        case 'Urbanlevel' : \n            tooltip = (\n                <p className={classes.Tooltip}>\n                    {Math.round(payload.value)} %\n                </p>\n            )\n        break;\n        case 'NumAgllos' : \n            tooltip = (\n                <p className={classes.Tooltip}>\n                    {parseFloat(payload.value).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \")} {agglos}\n                </p>\n            )\n        break;\n        case 'Mpop' : \n            tooltip = (\n                <p className={classes.Tooltip}>\n                    {Math.round(payload.value)} %\n                </p>\n            )\n        break;\n        case 'ADBA' : \n            tooltip = (\n                <p className={classes.Tooltip}>\n                    {parseFloat(payload.value).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \")} km\n                </p>\n            )\n        break;\n        default: \n            tooltip = null;\n    }\n    \n    return tooltip;\n    \n    }\n}\n","import React from 'react';\nimport classes from './Visualisation.module.css';\nimport LineGraph from './LineGraph/LineGraph';\nimport KeyFigures from '../KeyFigures/KeyFigures';\n\nconst visualisation = props => {\n    const { \n        keyFigureList, \n        language, data,\n        query, history } = props;\n\n    let country = history.location.pathname === '/fr' ? 'Country_FR' : 'Country',\n    dataType = keyFigureList.filter(d => d.type === query.keyfigure );\n\n    let filterData = {\n        country: country,\n        data: cleanData(data[dataType[0].label]),\n        type: dataType[0].label\n    }\n\n    function cleanData(data) {\n        let res = [];\n        for (let i in data) {\n            res.push({ \n                year: i, \n                value: \n                dataType[0].ID === 2 && query.country <= 50 ? data[i] * 100 : \n                dataType[0].ID === 4 && query.country <= 50 ? data[i] * 100 : \n                data[i],\n                yAxisKey: data[i]\n            })\n        }\n        return res;\n    }\n    let line = <LineGraph \n        data={filterData}\n        query={query}\n    />\n\n    let keyfigure = (\n        <div className={classes.KeyFigure__Md_Lg}>\n            <KeyFigures \n                    language={language}\n                    query={query}\n                    data={keyFigureList}             \n                    onKeyFigureChange={props.onKeyFigureChange}\n                />\n        </div>\n    );\n\n    return (\n        <div className={classes.Visualisation}> \n            {keyfigure}\n            {line}\n        </div>\n    )\n};\n\nexport default visualisation;","import React from 'react';\nimport classes from './Layout.module.css';\nimport Mixer from '../../Components/Mixer/Mixer';\nimport Visualisation from '../../Components/Visualisation/Visualisation';\nimport _ from 'lodash';\n\nclass Layout extends React.Component {\n    state = { }\n\n    pushQueries = value => {\n\n        let oldParameters, queryType;\n        oldParameters = { ...this.props.query };\n        queryType = Object.keys(value)[0];\n        oldParameters[queryType] = value[queryType];\n        const updatedParams = [];\n\n        for (let i in oldParameters) {\n            updatedParams.push(\n                encodeURIComponent(i) + \"=\" + encodeURIComponent(oldParameters[i])\n                );\n            }\n\n        this.props.history.push({\n\t\t\tpathname: this.props.history.location.pathname,\n\t\t\tsearch: \"?\" + updatedParams.join(\"&\")\n\t\t});\n\t}\n    \n    render() {\n        const { \n            data, shape,\n            history,\n            query,\n            keyFigureList,\n        } = this.props;\n\n        //Set searchbar options\n        let dataLanguage = 'Country'\n        if ( query.lang === 'fr') dataLanguage='Country_FR';\n        data.sort((a, b) => a.ISO - b.ISO);\n        let countryList = _.chain(data)\n            .map(c => ({ value: c.ISO, label: c[dataLanguage] }))\n            .sort((a,b) => a.value - b.value)\n            .chunk(50)\n            .value()\n\n        let options = [\n            { label: query.lang === 'en' ? 'Regions' : 'Régions',\n                 options: sortAlphabetically(countryList[1]) },\n            { label: query.lang === 'en' ? 'Countries' : 'Pays',\n                 options: sortAlphabetically(countryList[0]) }\n        ];\n         \n        function sortAlphabetically(data) {\n            return data.sort((a,b) => a.label.localeCompare(b.label));\n        }\n\n        if ( data.length === 0 ||\n            Object.entries(query).length ===0 ){\n                return <div> Loading ...</div>\n            } else {\n                return (\n                    <div className={classes.Layout}>\n                        <Mixer \n                            shape={shape}\n                            countryList={options}\n                            query={query}\n                            onKeyFigureChange={e => this.pushQueries({ \n                                keyfigure: keyFigureList[e.value -1 ].type\n                            })}\n                            keyFigureList={keyFigureList}\n                            language={query.lang}\n                            onSearchChange={e => this.pushQueries({ country: e.value })}\n                        />\n                        <Visualisation \n                            query={query}\n                            history={history}\n                            onKeyFigureChange={e => this.pushQueries({ \n                                keyfigure: keyFigureList[e.value -1 ].type\n                            })}\n                            language={query.lang}\n                            data={data[query.country - 1]}\n                            keyFigureList={keyFigureList}\n                        />\n                    </div>\n                )\n        }   \n    }\n}\n\n\nexport default Layout;","import React from 'react';\nimport Layout from './Layout';\n\nclass LayoutContainer extends React.Component {\n\n\tcomponentDidMount() {\n        if ( Object.entries(this.props.query).length === 0 ) {\n            this.pushQueries({country: 51, keyfigure: \"Urban population\", lang: 'en'})\n        }\n\t}\n\t\n\tpushQueries = oldParameters => {\n        let newParameters = oldParameters;\n        const updatedParams = [];\n        for (let i in newParameters) {\n            updatedParams.push(\n                encodeURIComponent(i) + \"=\" + encodeURIComponent(newParameters[i])\n            );\n        }\n        const newQueries = updatedParams.join(\"&\");\n\n        return this.props.history.push({\n            pathname: this.props.history.location.pathname,\n            search: \"?\" + newQueries\n        });\n\t}\n\n    render() { return <Layout {...this.props} /> }\n};\n\nexport default LayoutContainer;","import React from 'react';\nimport queryString from 'query-string';\nimport LayoutContainer from './Container/Layout/LayoutContainer';\nimport Countries from './data/countries';\nimport Shapefile from './data/geo_country';\nimport { Route, BrowserRouter } from 'react-router-dom';\nimport './App.css';\n\n\nclass App extends React.Component {\n\n\tstate = {\n\t\tcountry: Countries,\n\t\tshape: Shapefile,\n\t}\n\n\trender() {\n\t\tconst { \n\t\t\tcountry, shape\n\t\t} = this.state;\n\n\t\tconst routes = [\n\t\t\t{ ID:1, component: LayoutContainer, path: \"/\", exact: true}\n\t\t];\n\n\t\tlet keyFigureList = [\n            { \"ID\": 1, \"label\": \"Upop\", \"type\": \"Urban population\", \"type_FR\": \"Population urbaine\" },\n            { \"ID\": 2, \"label\": \"Urbanlevel\", \"type\": \"Level of urbanisation\", \"type_FR\": \"Niveau d'urbanisation\" },\n            { \"ID\": 3, \"label\": \"NumAgllos\", \"type\": \"Number of agglomerations\", \"type_FR\": \"Nombre d'agglomérations\" },\n            { \"ID\": 4, \"label\": \"Mpop\", \"type\": \"Metropolitan population\", \"type_FR\": \"Population métropolitaine\" },\n            { \"ID\": 5, \"label\": \"ADBA\", \"type\": \"Average distance between agglomerations\", \"type_FR\": \"Distance moyenne entre les agglomérations\" }\n        ];\n\n\t\treturn (\n\t\t\t<BrowserRouter basename='/pac-digitalstories'>\n\t\t\t\t{routes.map( ({ID, component: C, path, exact}) => (\n\t\t\t\t\t<Route \n\t\t\t\t\t\tkey={ID}\n\t\t\t\t\t\tpath={path}\n\t\t\t\t\t\texact={exact}\n\t\t\t\t\t\trender={( {location, history}) =>\n\t\t\t\t\t\t\t<C \n\t\t\t\t\t\t\t\tquery={getParams(location)} \n\t\t\t\t\t\t\t\thistory={history} \n\t\t\t\t\t\t\t\tdata={country} \n\t\t\t\t\t\t\t\tshape={shape} \n\t\t\t\t\t\t\t\tkeyFigureList={keyFigureList} \n\t\t\t\t\t\t\t\t/> \n\t\t\t\t\t\t\t} \n\t\t\t\t\t/>\n\t\t\t\t) )}\n\t\t\t</BrowserRouter>\n\t\t)\n\t}\n}\n\nfunction getParams(location) {\n\tconst queries = queryString.parse(location.search);\n\treturn queries;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchBar\":\"SearchBar_SearchBar__2hOf6\",\"SearchBar__Sm\":\"SearchBar_SearchBar__Sm__38eLn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Mixer\":\"Mixer_Mixer__3Ls7_\",\"Sm_Md\":\"Mixer_Sm_Md__1DbMe\",\"Large\":\"Mixer_Large__b2AMM\"};"],"sourceRoot":""}